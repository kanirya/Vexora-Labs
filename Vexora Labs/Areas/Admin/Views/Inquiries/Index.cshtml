@{
    ViewData["Title"] = "Inquiries Dashboard";
    ViewData["PageCss"] = "admin-inquiries.css";
}


<div class="admin-container">
    <div class="admin-header">
        <div>
            <h1 class="admin-title">Inquiries Dashboard</h1>
            <p class="admin-subtitle">Manage service inquiries and user forms</p>
        </div>
        <button id="themeToggle" class="theme-toggle" title="Toggle theme">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="sun-icon">
                <circle cx="12" cy="12" r="5"></circle>
                <line x1="12" y1="1" x2="12" y2="3"></line>
                <line x1="12" y1="21" x2="12" y2="23"></line>
                <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
                <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
                <line x1="1" y1="12" x2="3" y2="12"></line>
                <line x1="21" y1="12" x2="23" y2="12"></line>
                <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
                <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="moon-icon" style="display: none;">
                <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>
            </svg>
        </button>
    </div>

    <div class="admin-card">
        <div class="admin-tabs">
            <div class="admin-tab active" data-tab="service-inquiries">Service Inquiries</div>
            <div class="admin-tab" data-tab="user-forms">User Forms</div>
        </div>

        <div class="admin-filters">
            <div class="filter-group">
                <label class="filter-label" for="search">Search</label>
                <input type="text" class="filter-input" id="search" placeholder="Name, email, etc." />
            </div>
            
            <div class="filter-group">
                <label class="filter-label" for="status">Status</label>
                <select class="filter-input" id="status">
                    <option value="all">All Statuses</option>
                    <option value="pending">Pending</option>
                    <option value="in-progress">In Progress</option>
                    <option value="completed">Completed</option>
                    <option value="rejected">Rejected</option>
                    <option value="on-hold">On Hold</option>
                </select>
            </div>
            
            <div class="filter-group">
                <label class="filter-label" for="fromDate">From Date</label>
                <input type="date" class="filter-input" id="fromDate" />
            </div>
            
            <div class="filter-group">
                <label class="filter-label" for="toDate">To Date</label>
                <input type="date" class="filter-input" id="toDate" />
            </div>
            
            <div class="filter-group" style="justify-content: flex-end;">
                <label class="filter-label">&nbsp;</label>
                <div style="display: flex; gap: 0.5rem;">
                    <button type="button" id="applyFilters" class="filter-button">Apply Filters</button>
                    <button type="button" id="clearFilters" class="filter-button secondary">Clear</button>
                </div>
            </div>
        </div>

        <div class="tab-content active" id="service-inquiries-content">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Service Type</th>
                        <th>Budget</th>
                        <th>Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="serviceInquiriesTable">
                    <!-- Service inquiries will be populated here by JavaScript -->
                </tbody>
            </table>
            
            <div class="pagination">
                <div class="pagination-info">
                    Showing <span id="serviceInquiriesCount">0</span> service inquiries
                </div>
                <div class="pagination-buttons">
                    <button class="pagination-button" disabled>&laquo;</button>
                    <button class="pagination-button active">1</button>
                    <button class="pagination-button" disabled>&raquo;</button>
                </div>
            </div>
        </div>

        <div class="tab-content" id="user-forms-content">
            <table class="admin-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Subject</th>
                        <th>Date</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="userFormsTable">
                    <!-- User forms will be populated here by JavaScript -->
                </tbody>
            </table>
            
            <div class="pagination">
                <div class="pagination-info">
                    Showing <span id="userFormsCount">0</span> user forms
                </div>
                <div class="pagination-buttons">
                    <button class="pagination-button" disabled>&laquo;</button>
                    <button class="pagination-button active">1</button>
                    <button class="pagination-button" disabled>&raquo;</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Service Inquiry Details Modal -->
<div id="serviceInquiryModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 class="modal-title">Service Inquiry Details</h2>
            <button class="modal-close">&times;</button>
        </div>
        <div class="modal-body" id="serviceInquiryDetails">
            <!-- Content will be populated by JavaScript -->
        </div>
        <div class="modal-footer">
            <button type="button" class="action-button secondary modal-close-btn">Close</button>
            <button type="button" class="action-button primary" id="serviceInquiryAction">Contact Client</button>
        </div>
    </div>
</div>

<!-- User Form Details Modal -->
<div id="userFormModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 class="modal-title">User Form Details</h2>
            <button class="modal-close">&times;</button>
        </div>
        <div class="modal-body" id="userFormDetails">
            <!-- Content will be populated by JavaScript -->
        </div>
        <div class="modal-footer">
            <button type="button" class="action-button secondary modal-close-btn">Close</button>
            <button type="button" class="action-button primary" id="userFormAction">Reply</button>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Static data - Replace with your own data
        const serviceInquiries = [
            {
                id: 1,
                fullName: "John Smith",
                email: "john.smith@example.com",
                phone: "+1 555-123-4567",
                company: "ABC Corporation",
                serviceType: "Web Development",
                projectBudget: "$5,000-$10,000",
                projectTimeline: "3-6 months",
                hearAboutUs: "Google Search",
                projectDescription: "We need a new website for our company that is modern, responsive, and easy to update. We would like to include an online store and a blog section.",
                privacyPolicy: true,
                newsletter: true,
                status: "pending",
                createdAt: "2023-05-15T10:30:00"
            },
            {
                id: 2,
                fullName: "Jane Doe",
                email: "jane.doe@example.com",
                phone: "+1 555-987-6543",
                company: "XYZ Inc.",
                serviceType: "Mobile App",
                projectBudget: "$10,000-$25,000",
                projectTimeline: "6-12 months",
                hearAboutUs: "Referral",
                projectDescription: "We're looking to develop a mobile app for both iOS and Android that will allow our customers to book appointments and view their account information.",
                privacyPolicy: true,
                newsletter: false,
                status: "in-progress",
                createdAt: "2023-06-02T14:45:00"
            },
            {
                id: 3,
                fullName: "Robert Johnson",
                email: "robert.johnson@example.com",
                phone: "+1 555-456-7890",
                company: "Johnson Consulting",
                serviceType: "UI/UX Design",
                projectBudget: "$1,000-$5,000",
                projectTimeline: "1-3 months",
                hearAboutUs: "Social Media",
                projectDescription: "I need a complete redesign of my company's user interface. The current design is outdated and not user-friendly.",
                privacyPolicy: true,
                newsletter: true,
                status: "completed",
                createdAt: "2023-04-10T09:15:00"
            },
            {
                id: 4,
                fullName: "Emily Wilson",
                email: "emily.wilson@example.com",
                phone: "+1 555-789-0123",
                company: "",
                serviceType: "SEO Services",
                projectBudget: "$1,000-$5,000",
                projectTimeline: "Ongoing",
                hearAboutUs: "Blog",
                projectDescription: "I need help improving my website's search engine rankings. I'm not getting enough organic traffic.",
                privacyPolicy: true,
                newsletter: true,
                status: "rejected",
                createdAt: "2023-06-20T11:00:00"
            },
            {
                id: 5,
                fullName: "Michael Brown",
                email: "michael.brown@example.com",
                phone: "+1 555-234-5678",
                company: "Brown Enterprises",
                serviceType: "E-commerce Development",
                projectBudget: "$25,000+",
                projectTimeline: "6-12 months",
                hearAboutUs: "Conference",
                projectDescription: "We need a comprehensive e-commerce solution that integrates with our existing inventory management system.",
                privacyPolicy: true,
                newsletter: false,
                status: "on-hold",
                createdAt: "2023-05-28T16:20:00"
            }
        ];

        const userForms = [
            {
                id: 1,
                fullName: "Sarah Johnson",
                email: "sarah.johnson@example.com",
                phone: "+1 555-111-2222",
                subject: "Question about your services",
                message: "Hello, I'm interested in learning more about your web development services. Do you offer maintenance packages after the website is completed?",
                status: "pending",
                createdAt: "2023-06-25T08:30:00"
            },
            {
                id: 2,
                fullName: "David Lee",
                email: "david.lee@example.com",
                phone: "+1 555-333-4444",
                subject: "Partnership opportunity",
                message: "I represent a digital marketing agency and we're looking for a reliable development partner for our clients. Would you be interested in discussing a potential partnership?",
                status: "in-progress",
                createdAt: "2023-06-20T13:15:00"
            },
            {
                id: 3,
                fullName: "Lisa Garcia",
                email: "lisa.garcia@example.com",
                phone: "",
                subject: "Support request",
                message: "I'm having trouble logging into my account on the website you developed for us. Can you please help me reset my password?",
                status: "completed",
                createdAt: "2023-06-18T10:45:00"
            },
            {
                id: 4,
                fullName: "Kevin Wilson",
                email: "kevin.wilson@example.com",
                phone: "+1 555-777-8888",
                subject: "",
                message: "I found your website and I'm impressed with your portfolio. I'd like to get a quote for a small business website with about 5-7 pages.",
                status: "rejected",
                createdAt: "2023-06-15T16:00:00"
            },
            {
                id: 5,
                fullName: "Amanda Taylor",
                email: "amanda.taylor@example.com",
                phone: "+1 555-999-0000",
                subject: "Job inquiry",
                message: "I'm a front-end developer with 3 years of experience and I'm interested in joining your team. Are you currently hiring?",
                status: "on-hold",
                createdAt: "2023-06-10T09:30:00"
            }
        ];

        // Initialize the tables
        let filteredServiceInquiries = [...serviceInquiries];
        let filteredUserForms = [...userForms];

        // Populate tables
        function populateTables() {
            populateServiceInquiriesTable();
            populateUserFormsTable();
        }

        function populateServiceInquiriesTable() {
            const tableBody = document.getElementById('serviceInquiriesTable');
            tableBody.innerHTML = '';
            
            if (filteredServiceInquiries.length === 0) {
                const emptyRow = document.createElement('tr');
                emptyRow.innerHTML = `
                    <td colspan="8">
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect>
                                    <line x1="8" y1="21" x2="16" y2="21"></line>
                                    <line x1="12" y1="17" x2="12" y2="21"></line>
                                </svg>
                            </div>
                            <h3 class="empty-state-title">No service inquiries found</h3>
                            <p class="empty-state-description">There are no service inquiries matching your current filters. Try adjusting your search criteria or check back later.</p>
                        </div>
                    </td>
                `;
                tableBody.appendChild(emptyRow);
            } else {
                filteredServiceInquiries.forEach(inquiry => {
                    const row = document.createElement('tr');
                    
                    // Format date
                    const date = new Date(inquiry.createdAt);
                    const formattedDate = date.toLocaleDateString('en-US', { 
                        year: 'numeric', 
                        month: 'short', 
                        day: 'numeric' 
                    });
                    
                    row.innerHTML = `
                        <td>${inquiry.id}</td>
                        <td>${inquiry.fullName}</td>
                        <td>${inquiry.email}</td>
                        <td>${inquiry.serviceType}</td>
                        <td>${inquiry.projectBudget}</td>
                        <td>${formattedDate}</td>
                        <td>
                            <span class="status-badge status-${inquiry.status}">
                                ${getStatusIcon(inquiry.status)}
                                ${formatStatus(inquiry.status)}
                            </span>
                        </td>
                        <td>
                            <div style="display: flex; gap: 0.5rem; justify-content: flex-end;">
                                <button type="button" class="action-button view-service-details" data-id="${inquiry.id}">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                        <circle cx="12" cy="12" r="3"></circle>
                                    </svg>
                                </button>
                                <div class="dropdown">
                                    <button type="button" class="action-button">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <circle cx="12" cy="12" r="1"></circle>
                                            <circle cx="12" cy="5" r="1"></circle>
                                            <circle cx="12" cy="19" r="1"></circle>
                                        </svg>
                                    </button>
                                    <div class="dropdown-content">
                                        <a href="#" class="update-service-status" data-id="${inquiry.id}" data-status="completed">Mark as Completed</a>
                                        <a href="#" class="update-service-status" data-id="${inquiry.id}" data-status="in-progress">Mark as In Progress</a>
                                        <a href="#" class="update-service-status" data-id="${inquiry.id}" data-status="on-hold">Put On Hold</a>
                                        <a href="#" class="update-service-status" data-id="${inquiry.id}" data-status="rejected" style="color: var(--admin-danger);">Reject</a>
                                    </div>
                                </div>
                            </div>
                        </td>
                    `;
                    
                    tableBody.appendChild(row);
                });
            }
            
            document.getElementById('serviceInquiriesCount').textContent = filteredServiceInquiries.length;
        }

        function populateUserFormsTable() {
            const tableBody = document.getElementById('userFormsTable');
            tableBody.innerHTML = '';
            
            if (filteredUserForms.length === 0) {
                const emptyRow = document.createElement('tr');
                emptyRow.innerHTML = `
                    <td colspan="7">
                        <div class="empty-state">
                            <div class="empty-state-icon">
                                <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                    <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path>
                                    <circle cx="9" cy="7" r="4"></circle>
                                    <path d="M23 21v-2a4 4 0 0 0-3-3.87"></path>
                                    <path d="M16 3.13a4 4 0 0 1 0 7.75"></path>
                                </svg>
                            </div>
                            <h3 class="empty-state-title">No user forms found</h3>
                            <p class="empty-state-description">There are no user forms matching your current filters. Try adjusting your search criteria or check back later.</p>
                        </div>
                    </td>
                `;
                tableBody.appendChild(emptyRow);
            } else {
                filteredUserForms.forEach(form => {
                    const row = document.createElement('tr');
                    
                    // Format date
                    const date = new Date(form.createdAt);
                    const formattedDate = date.toLocaleDateString('en-US', { 
                        year: 'numeric', 
                        month: 'short', 
                        day: 'numeric' 
                    });
                    
                    row.innerHTML = `
                        <td>${form.id}</td>
                        <td>${form.fullName}</td>
                        <td>${form.email}</td>
                        <td>${form.subject || 'N/A'}</td>
                        <td>${formattedDate}</td>
                        <td>
                            <span class="status-badge status-${form.status}">
                                ${getStatusIcon(form.status)}
                                ${formatStatus(form.status)}
                            </span>
                        </td>
                        <td>
                            <div style="display: flex; gap: 0.5rem; justify-content: flex-end;">
                                <button type="button" class="action-button view-user-details" data-id="${form.id}">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                        <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                        <circle cx="12" cy="12" r="3"></circle>
                                    </svg>
                                </button>
                                <div class="dropdown">
                                    <button type="button" class="action-button">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                            <circle cx="12" cy="12" r="1"></circle>
                                            <circle cx="12" cy="5" r="1"></circle>
                                            <circle cx="12" cy="19" r="1"></circle>
                                        </svg>
                                    </button>
                                    <div class="dropdown-content">
                                        <a href="#" class="update-user-status" data-id="${form.id}" data-status="completed">Mark as Completed</a>
                                        <a href="#" class="update-user-status" data-id="${form.id}" data-status="in-progress">Mark as In Progress</a>
                                        <a href="#" class="update-user-status" data-id="${form.id}" data-status="on-hold">Put On Hold</a>
                                        <a href="#" class="update-user-status" data-id="${form.id}" data-status="rejected" style="color: var(--admin-danger);">Reject</a>
                                    </div>
                                </div>
                            </div>
                        </td>
                    `;
                    
                    tableBody.appendChild(row);
                });
            }
            
            document.getElementById('userFormsCount').textContent = filteredUserForms.length;
        }

        // Helper functions
        function getStatusIcon(status) {
            let icon = '';
            
            switch (status) {
                case 'pending':
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 4px;">
                        <circle cx="12" cy="12" r="10"></circle>
                        <polyline points="12 6 12 12 16 14"></polyline>
                    </svg>`;
                    break;
                case 'in-progress':
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 4px;">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="12" y1="8" x2="12" y2="12"></line>
                        <line x1="12" y1="16" x2="12.01" y2="16"></line>
                    </svg>`;
                    break;
                case 'completed':
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 4px;">
                        <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                        <polyline points="22 4 12 14.01 9 11.01"></polyline>
                    </svg>`;
                    break;
                case 'rejected':
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 4px;">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="15" y1="9" x2="9" y2="15"></line>
                        <line x1="9" y1="9" x2="15" y2="15"></line>
                    </svg>`;
                    break;
                case 'on-hold':
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 4px;">
                        <circle cx="12" cy="12" r="10"></circle>
                        <line x1="8" y1="12" x2="16" y2="12"></line>
                    </svg>`;
                    break;
            }
            
            return icon;
        }

        function formatStatus(status) {
            return status.replace(/-/g, ' ').toUpperCase();
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString('en-US', { 
                year: 'numeric', 
                month: 'long', 
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // Tab switching
        const tabs = document.querySelectorAll('.admin-tab');
        const tabContents = document.querySelectorAll('.tab-content');

        tabs.forEach(tab => {
            tab.addEventListener('click', function() {
                const tabId = this.getAttribute('data-tab');
                
                // Update active tab
                tabs.forEach(t => t.classList.remove('active'));
                this.classList.add('active');
                
                // Update tab content
                tabContents.forEach(content => {
                    content.classList.remove('active');
                    if (content.id === tabId + '-content') {
                        content.classList.add('active');
                    }
                });
            });
        });

        // Filtering
        document.getElementById('applyFilters').addEventListener('click', function() {
            applyFilters();
        });

        document.getElementById('clearFilters').addEventListener('click', function() {
            document.getElementById('search').value = '';
            document.getElementById('status').value = 'all';
            document.getElementById('fromDate').value = '';
            document.getElementById('toDate').value = '';
            
            applyFilters();
        });

        function applyFilters() {
            const search = document.getElementById('search').value.toLowerCase();
            const status = document.getElementById('status').value;
            const fromDate = document.getElementById('fromDate').value ? new Date(document.getElementById('fromDate').value) : null;
            const toDate = document.getElementById('toDate').value ? new Date(document.getElementById('toDate').value) : null;
            
            // If toDate is provided, set it to the end of the day
            if (toDate) {
                toDate.setHours(23, 59, 59, 999);
            }
            
            // Filter service inquiries
            filteredServiceInquiries = serviceInquiries.filter(inquiry => {
                // Search filter
                const matchesSearch = search === '' || 
                    inquiry.fullName.toLowerCase().includes(search) || 
                    inquiry.email.toLowerCase().includes(search) || 
                    inquiry.company.toLowerCase().includes(search) || 
                    inquiry.serviceType.toLowerCase().includes(search);
                
                // Status filter
                const matchesStatus = status === 'all' || inquiry.status === status;
                
                // Date filter
                let matchesDate = true;
                const inquiryDate = new Date(inquiry.createdAt);
                
                if (fromDate && toDate) {
                    matchesDate = inquiryDate >= fromDate && inquiryDate <= toDate;
                } else if (fromDate) {
                    matchesDate = inquiryDate >= fromDate;
                } else if (toDate) {
                    matchesDate = inquiryDate <= toDate;
                }
                
                return matchesSearch && matchesStatus && matchesDate;
            });
            
            // Filter user forms
            filteredUserForms = userForms.filter(form => {
                // Search filter
                const matchesSearch = search === '' || 
                    form.fullName.toLowerCase().includes(search) || 
                    form.email.toLowerCase().includes(search) || 
                    (form.subject && form.subject.toLowerCase().includes(search));
                
                // Status filter
                const matchesStatus = status === 'all' || form.status === status;
                
                // Date filter
                let matchesDate = true;
                const formDate = new Date(form.createdAt);
                
                if (fromDate && toDate) {
                    matchesDate = formDate >= fromDate && formDate <= toDate;
                } else if (fromDate) {
                    matchesDate = formDate >= fromDate;
                } else if (toDate) {
                    matchesDate = formDate <= toDate;
                }
                
                return matchesSearch && matchesStatus && matchesDate;
            });
            
            // Update tables
            populateTables();
        }

        // Theme toggle
        const themeToggle = document.getElementById('themeToggle');
        const sunIcon = themeToggle.querySelector('.sun-icon');
        const moonIcon = themeToggle.querySelector('.moon-icon');
        
        // Check for saved theme preference or use default
        const savedTheme = localStorage.getItem('theme') || 'light';
        document.body.classList.toggle('theme-dark', savedTheme === 'dark');
        
        // Update icons based on current theme
        if (savedTheme === 'dark') {
            sunIcon.style.display = 'none';
            moonIcon.style.display = 'block';
        }
        
        themeToggle.addEventListener('click', function() {
            document.body.classList.toggle('theme-dark');
            const isDark = document.body.classList.contains('theme-dark');
            
            // Save preference
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            
            // Toggle icons
            sunIcon.style.display = isDark ? 'none' : 'block';
            moonIcon.style.display = isDark ? 'block' : 'none';
        });

        // Modal functionality
        const serviceModal = document.getElementById('serviceInquiryModal');
        const userModal = document.getElementById('userFormModal');
        const closeButtons = document.querySelectorAll('.modal-close, .modal-close-btn');
        
        // Close modals
        closeButtons.forEach(button => {
            button.addEventListener('click', function() {
                serviceModal.style.display = 'none';
                userModal.style.display = 'none';
            });
        });
        
        // Close modal when clicking outside
        window.addEventListener('click', function(event) {
            if (event.target === serviceModal) {
                serviceModal.style.display = 'none';
            }
            if (event.target === userModal) {
                userModal.style.display = 'none';
            }
        });

        // View service inquiry details
        document.addEventListener('click', function(e) {
            if (e.target.closest('.view-service-details')) {
                const button = e.target.closest('.view-service-details');
                const id = parseInt(button.getAttribute('data-id'));
                const inquiry = serviceInquiries.find(item => item.id === id);
                
                if (inquiry) {
                    const detailsHtml = `
                        <div class="detail-grid">
                            <div class="detail-section">
                                <h3 class="detail-section-title">Contact Information</h3>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Full Name</div>
                                    <div class="detail-value">${inquiry.fullName}</div>
                                </div>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Email Address</div>
                                    <div class="detail-value">${inquiry.email}</div>
                                </div>
                                
                                ${inquiry.phone ? `
                                <div class="detail-item">
                                    <div class="detail-label">Phone Number</div>
                                    <div class="detail-value">${inquiry.phone}</div>
                                </div>
                                ` : ''}
                                
                                ${inquiry.company ? `
                                <div class="detail-item">
                                    <div class="detail-label">Company</div>
                                    <div class="detail-value">${inquiry.company}</div>
                                </div>
                                ` : ''}
                            </div>
                            
                            <div class="detail-section">
                                <h3 class="detail-section-title">Project Details</h3>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Service Type</div>
                                    <div class="detail-value">${inquiry.serviceType}</div>
                                </div>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Project Budget</div>
                                    <div class="detail-value">${inquiry.projectBudget}</div>
                                </div>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Project Timeline</div>
                                    <div class="detail-value">${inquiry.projectTimeline}</div>
                                </div>
                                
                                <div class="detail-item">
                                    <div class="detail-label">How Did You Hear About Us</div>
                                    <div class="detail-value">${inquiry.hearAboutUs}</div>
                                </div>
                            </div>
                        </div>

                        <div class="detail-section">
                            <h3 class="detail-section-title">Project Description</h3>
                            <div class="detail-description">${inquiry.projectDescription}</div>
                        </div>

                        <div class="detail-section">
                            <h3 class="detail-section-title">Additional Information</h3>
                            
                            <div style="display: flex; gap: 1rem; margin-top: 0.5rem;">
                                <div style="display: flex; align-items: center;">
                                    <input type="checkbox" ${inquiry.privacyPolicy ? 'checked' : ''} disabled style="margin-right: 0.5rem;">
                                    <span>Agreed to Privacy Policy</span>
                                </div>
                                
                                <div style="display: flex; align-items: center;">
                                    <input type="checkbox" ${inquiry.newsletter ? 'checked' : ''} disabled style="margin-right: 0.5rem;">
                                    <span>Subscribed to Newsletter</span>
                                </div>
                            </div>
                        </div>

                        <div class="detail-section">
                            <h3 class="detail-section-title">Submission Details</h3>
                            
                            <div class="detail-item">
                                <div class="detail-label">Status</div>
                                <div class="detail-value">
                                    <span class="status-badge status-${inquiry.status}">
                                        ${getStatusIcon(inquiry.status)}
                                        ${formatStatus(inquiry.status)}
                                    </span>
                                </div>
                            </div>
                            
                            <div class="detail-item">
                                <div class="detail-label">Submission Date</div>
                                <div class="detail-value">${formatDate(inquiry.createdAt)}</div>
                            </div>
                        </div>
                    `;
                    
                    document.getElementById('serviceInquiryDetails').innerHTML = detailsHtml;
                    serviceModal.style.display = 'block';
                }
            }
        });

        // View user form details
        document.addEventListener('click', function(e) {
            if (e.target.closest('.view-user-details')) {
                const button = e.target.closest('.view-user-details');
                const id = parseInt(button.getAttribute('data-id'));
                const form = userForms.find(item => item.id === id);
                
                if (form) {
                    const detailsHtml = `
                        <div class="detail-grid">
                            <div class="detail-section">
                                <h3 class="detail-section-title">Contact Information</h3>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Full Name</div>
                                    <div class="detail-value">${form.fullName}</div>
                                </div>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Email Address</div>
                                    <div class="detail-value">${form.email}</div>
                                </div>
                                
                                ${form.phone ? `
                                <div class="detail-item">
                                    <div class="detail-label">Phone Number</div>
                                    <div class="detail-value">${form.phone}</div>
                                </div>
                                ` : ''}
                            </div>
                            
                            <div class="detail-section">
                                <h3 class="detail-section-title">Message Details</h3>
                                
                                ${form.subject ? `
                                <div class="detail-item">
                                    <div class="detail-label">Subject</div>
                                    <div class="detail-value">${form.subject}</div>
                                </div>
                                ` : ''}
                                
                                <div class="detail-item">
                                    <div class="detail-label">Status</div>
                                    <div class="detail-value">
                                        <span class="status-badge status-${form.status}">
                                            ${getStatusIcon(form.status)}
                                            ${formatStatus(form.status)}
                                        </span>
                                    </div>
                                </div>
                                
                                <div class="detail-item">
                                    <div class="detail-label">Submission Date</div>
                                    <div class="detail-value">${formatDate(form.createdAt)}</div>
                                </div>
                            </div>
                        </div>

                        <div class="detail-section">
                            <h3 class="detail-section-title">Message</h3>
                            <div class="detail-description">${form.message}</div>
                        </div>
                    `;
                    
                    document.getElementById('userFormDetails').innerHTML = detailsHtml;
                    userModal.style.display = 'block';
                }
            }
        });

        // Update service inquiry status
        document.addEventListener('click', function(e) {
            if (e.target.closest('.update-service-status')) {
                e.preventDefault();
                const link = e.target.closest('.update-service-status');
                const id = parseInt(link.getAttribute('data-id'));
                const status = link.getAttribute('data-status');
                
                const inquiry = serviceInquiries.find(item => item.id === id);
                if (inquiry) {
                    inquiry.status = status;
                    applyFilters(); // Refresh the table
                }
            }
        });

        // Update user form status
        document.addEventListener('click', function(e) {
            if (e.target.closest('.update-user-status')) {
                e.preventDefault();
                const link = e.target.closest('.update-user-status');
                const id = parseInt(link.getAttribute('data-id'));
                const status = link.getAttribute('data-status');
                
                const form = userForms.find(item => item.id === id);
                if (form) {
                    form.status = status;
                    applyFilters(); // Refresh the table
                }
            }
        });

        // Initialize the page
        populateTables();
    });
</script>